

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bus.ticketing;

import bus.ticketing.ManageFrame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author user
 */
public class PassengerCA extends javax.swing.JFrame {

    /**
     * Creates new form PassengerCA
     */
    public PassengerCA() {
        initComponents();
        sqlconnect();
    LoadStartingPoint();
    


    }
    PreparedStatement ps;
    Connection connect;
    ResultSet result;
     ResultSetMetaData rsm;
     DefaultTableModel tmodel; 
    public void sqlconnect(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
             connect=DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tocb = new javax.swing.JComboBox<>();
        fromcb = new javax.swing.JComboBox<>();
        browsebtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jScrollPane2.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Where do you want to go?");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        tocb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tocb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tocbActionPerformed(evt);
            }
        });
        jPanel1.add(tocb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 240, -1));

        fromcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        fromcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromcbActionPerformed(evt);
            }
        });
        fromcb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fromcbKeyReleased(evt);
            }
        });
        jPanel1.add(fromcb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 240, -1));

        browsebtn.setText("BROWSE");
        browsebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsebtnActionPerformed(evt);
            }
        });
        jPanel1.add(browsebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 102, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bus/ticketing/pics/log-out.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, -1));

        jLabel5.setText("To");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel6.setText("From");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel1.setBackground(new java.awt.Color(0, 102, 51));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 190));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Bus No.", "Bus Type", "Departure Time", "Arrival Time", "Fare"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 188, 540, 520));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fromcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromcbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromcbActionPerformed

    private void tocbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tocbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tocbActionPerformed

    private void browsebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsebtnActionPerformed
    String searchfrom = (String) fromcb.getSelectedItem();
    String searchto = (String) tocb.getSelectedItem();
    
    try {
        connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");
        
        ps = connect.prepareStatement(
            "SELECT * FROM `route_table` WHERE `Starting_Point` = ? AND `Destination` = ?"
        );
        
        ps.setString(1, searchfrom);
        ps.setString(2, searchto);
        
        result = ps.executeQuery();
        
        if (result.next() == true) {
            ToAvailableBus(searchfrom, searchto);
        } else {
            JOptionPane.showMessageDialog(this, "No Bus found for selected locations.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

     
    }//GEN-LAST:event_browsebtnActionPerformed

    private void fromcbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fromcbKeyReleased
         DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
    TableRowSorter<DefaultTableModel> tbl = new TableRowSorter<>(tb);
    jTable1.setRowSorter(tbl);
    tbl.setRowFilter(RowFilter.regexFilter(fromcb.getSelectedItem().toString()));
    
    }//GEN-LAST:event_fromcbKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
          
        String startingPoint = fromcb.getSelectedItem().toString(); 
        String destination = tocb.getSelectedItem().toString();
        String busNo = jTable1.getValueAt(row, 0).toString();
        String busType = jTable1.getValueAt(row, 1).toString();
        String departureTime = jTable1.getValueAt(row, 2).toString();
        String arrivalTime = jTable1.getValueAt(row, 3).toString();
        String fare = jTable1.getValueAt(row, 4).toString();
       

        BookSeat seat = new BookSeat(startingPoint, destination,busNo, busType, departureTime, arrivalTime, fare);
       seat.setVisible(true);
       seat.show();
       seat.setLocationRelativeTo(null);

     
        dispose();
    

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          LOgIn login=new LOgIn();
       login.setVisible(true);
        login.show();
        login.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
      
     public void LoadStartingPoint(){
         try {
            ps=connect.prepareStatement("SELECT `Starting_Point` FROM `route_table`");
            result=ps.executeQuery();
            fromcb.removeAllItems();
             while(result.next()){
                fromcb.addItem(result.getString(1)); 
                
            }
            ps=connect.prepareStatement("SELECT `Destination` FROM `route_table`");
            result=ps.executeQuery();
            
            tocb.removeAllItems();
            while(result.next()){
              
                 tocb.addItem(result.getString(1)); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
        public void ToAvailableBus(String searchfrom, String searchto){
     int Ccount;
    try {
        ps = connect.prepareStatement(
            "SELECT buses.Bus_No, buses.Bus_Type, route_table.Departure_Time, route_table.Arrival_Time, route_table.Fare " +
            "FROM buses " +
            "JOIN route_table ON buses.route_id = route_table.route_id " +
            "WHERE route_table.Starting_Point = ? AND route_table.Destination = ?"
        );
        
        ps.setString(1, searchfrom);
        ps.setString(2, searchto);
        
        result = ps.executeQuery();
        
        rsm = result.getMetaData();
        Ccount = rsm.getColumnCount();
        tmodel = (DefaultTableModel) jTable1.getModel();
        tmodel.setRowCount(0); // Clear previous rows
        
        while(result.next()){
            Vector<Object> vec = new Vector<>();
            for (int i = 1; i <= Ccount; i++) {
                vec.add(result.getString(i));
            }
            tmodel.addRow(vec);
        }
        
        jTable1.revalidate(); 
        jTable1.repaint();
        
    } catch (SQLException ex) {
        Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PassengerCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PassengerCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PassengerCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassengerCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PassengerCA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browsebtn;
    private javax.swing.JComboBox<String> fromcb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JComboBox<String> tocb;
    // End of variables declaration//GEN-END:variables
}
