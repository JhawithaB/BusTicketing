/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bus.ticketing;

import java.awt.Color;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author user
 */
public class ManageFrame extends javax.swing.JFrame {
       private String adminEmail;
    
       
       /* 
     * Creates new form ManageFrame
     */
    public ManageFrame() {
        initComponents();
         sqlconnect();
        
         ToTableBus();
          ToTableRoutes();
          ToTableTicket();
          Routefrom();

          Routefromto();
           LoadDriver();
            LoadBusno();
            

    }
   PreparedStatement ps;
    Connection connect;
    ResultSet result;
     ResultSetMetaData rsm;
     DefaultTableModel tmodel; 
    public void sqlconnect(){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
             connect=DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
             System.out.print("Connected");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    public ManageFrame(String adminEmail) {
        initComponents();
        sqlconnect();
        this.adminEmail = adminEmail;
           try {
         connect=DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
         ps=connect.prepareStatement("SELECT * FROM `admin_table` WHERE `Email`=?");
         ps.setString(1, adminEmail);
        result = ps.executeQuery();
                if (result.next()) {
            String adminId = result.getString("Admin_ID");
            String adminName = result.getString("Admin_Name");

            jLabel1.setText("ADMIN ID: " + adminId);
            jLabel2.setText("ADMIN: " + adminName);
            
        } 
           } catch (SQLException ex) {
               Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
        
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        mngbusBtn = new javax.swing.JButton();
        mngrouteBtn = new javax.swing.JButton();
        mngbookingsBtn = new javax.swing.JButton();
        mngadminsBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        ManageTab = new javax.swing.JTabbedPane();
        busespnl = new javax.swing.JPanel();
        Bid = new javax.swing.JTextField();
        Bno = new javax.swing.JTextField();
        Btype = new javax.swing.JTextField();
        slcBroute2 = new javax.swing.JComboBox<>();
        slcBroute = new javax.swing.JComboBox<>();
        slcBdriver = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        btnBadd = new javax.swing.JButton();
        btnBedit = new javax.swing.JButton();
        btnBdelete = new javax.swing.JButton();
        btnBsearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Bsearch = new javax.swing.JTextField();
        slcBRid = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        routespnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Rid = new javax.swing.JTextField();
        Rst = new javax.swing.JTextField();
        Rdes = new javax.swing.JTextField();
        Rdep = new javax.swing.JTextField();
        Rfare = new javax.swing.JTextField();
        Rsearch = new javax.swing.JTextField();
        Rarr = new javax.swing.JTextField();
        Radd = new javax.swing.JButton();
        Rdelete = new javax.swing.JButton();
        Redit = new javax.swing.JButton();
        btnRsearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        bookingpnl = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        Tid = new javax.swing.JTextField();
        Tpid = new javax.swing.JTextField();
        Tpname = new javax.swing.JTextField();
        Tseat = new javax.swing.JTextField();
        Tdate = new com.toedter.calendar.JDateChooser();
        Tdct = new javax.swing.JTextField();
        Ttotal = new javax.swing.JTextField();
        Tsearch = new javax.swing.JTextField();
        Tsearchbtn = new javax.swing.JButton();
        Taddbtn = new javax.swing.JButton();
        Teditbtn = new javax.swing.JButton();
        Tdeletebtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        Troutefrom = new javax.swing.JComboBox<>();
        Tbid = new javax.swing.JComboBox<>();
        Trouteto = new javax.swing.JComboBox<>();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        adminpnl = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Aid = new javax.swing.JTextField();
        Aname = new javax.swing.JTextField();
        Acontact = new javax.swing.JTextField();
        Apass = new javax.swing.JTextField();
        Aaddbtn = new javax.swing.JButton();
        Aeditbtn = new javax.swing.JButton();
        Adeletebtn = new javax.swing.JButton();
        Atable = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        Asearch = new javax.swing.JTextField();
        Asearchbtn = new javax.swing.JButton();
        Arole = new javax.swing.JTextField();
        Aemail = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        Did = new javax.swing.JTextField();
        Dname = new javax.swing.JTextField();
        Dcontact = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        Dadd = new javax.swing.JButton();
        Dedit = new javax.swing.JButton();
        Ddelete = new javax.swing.JButton();
        Dtable = new javax.swing.JButton();
        Dsearch = new javax.swing.JTextField();
        Dsearchbtn = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        jTextField7.setText("jTextField7");

        jTextField1.setText("jTextField1");

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mngbusBtn.setBackground(new java.awt.Color(0, 138, 53));
        mngbusBtn.setFont(new java.awt.Font("Californian FB", 1, 14)); // NOI18N
        mngbusBtn.setForeground(new java.awt.Color(255, 255, 255));
        mngbusBtn.setText("Buses");
        mngbusBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mngbusBtnMouseClicked(evt);
            }
        });
        mngbusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mngbusBtnActionPerformed(evt);
            }
        });
        jPanel1.add(mngbusBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 90, 40));

        mngrouteBtn.setBackground(new java.awt.Color(0, 138, 53));
        mngrouteBtn.setFont(new java.awt.Font("Californian FB", 1, 14)); // NOI18N
        mngrouteBtn.setForeground(new java.awt.Color(255, 255, 255));
        mngrouteBtn.setText("Routes");
        mngrouteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mngrouteBtnMouseClicked(evt);
            }
        });
        mngrouteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mngrouteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(mngrouteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, 90, 40));

        mngbookingsBtn.setBackground(new java.awt.Color(0, 138, 53));
        mngbookingsBtn.setFont(new java.awt.Font("Californian FB", 1, 14)); // NOI18N
        mngbookingsBtn.setForeground(new java.awt.Color(255, 255, 255));
        mngbookingsBtn.setText("Bookings");
        mngbookingsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mngbookingsBtnMouseClicked(evt);
            }
        });
        jPanel1.add(mngbookingsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 90, 100, 40));

        mngadminsBtn.setBackground(new java.awt.Color(0, 138, 53));
        mngadminsBtn.setFont(new java.awt.Font("Californian FB", 1, 14)); // NOI18N
        mngadminsBtn.setForeground(new java.awt.Color(255, 255, 255));
        mngadminsBtn.setText("Admins/Drivers");
        mngadminsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mngadminsBtnMouseClicked(evt);
            }
        });
        jPanel1.add(mngadminsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 90, 140, 40));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("ADMIN: ");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 130, 30));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("ADMIN ID:");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 30));

        jButton1.setBackground(new java.awt.Color(0, 102, 51));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bus/ticketing/pics/log-out.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 40, 30));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bus/ticketing/pics/Etick2.jpg"))); // NOI18N
        jPanel1.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 690, 130));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 130));

        ManageTab.setBackground(new java.awt.Color(153, 153, 255));

        busespnl.setBackground(new java.awt.Color(0, 102, 51));
        busespnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Buses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Californian FB", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        busespnl.setForeground(new java.awt.Color(0, 0, 0));
        busespnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        busespnl.add(Bid, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 230, 30));
        busespnl.add(Bno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 230, 30));
        busespnl.add(Btype, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 230, 30));

        slcBroute2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        slcBroute2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slcBroute2ActionPerformed(evt);
            }
        });
        busespnl.add(slcBroute2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 240, 40));

        slcBroute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        busespnl.add(slcBroute, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 240, 40));

        slcBdriver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        slcBdriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slcBdriverActionPerformed(evt);
            }
        });
        busespnl.add(slcBdriver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 240, 40));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Bus ID");
        busespnl.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Bus Plate No.");
        busespnl.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Bus Type");
        busespnl.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Select Route");
        busespnl.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Select Driver");
        busespnl.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Destination");
        busespnl.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Starting Point");
        busespnl.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        btnBadd.setBackground(new java.awt.Color(0, 153, 51));
        btnBadd.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnBadd.setText(" ADD ");
        btnBadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaddActionPerformed(evt);
            }
        });
        busespnl.add(btnBadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 410, 110, 40));

        btnBedit.setBackground(new java.awt.Color(51, 153, 0));
        btnBedit.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnBedit.setText("EDIT");
        btnBedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeditActionPerformed(evt);
            }
        });
        busespnl.add(btnBedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, 110, 40));

        btnBdelete.setBackground(new java.awt.Color(51, 153, 0));
        btnBdelete.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnBdelete.setText("DELETE");
        btnBdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBdeleteActionPerformed(evt);
            }
        });
        busespnl.add(btnBdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 110, 40));

        btnBsearch.setText("SEARCH ");
        btnBsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBsearchActionPerformed(evt);
            }
        });
        busespnl.add(btnBsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Bus ID", "Bus No.", "Bus Type", "Starting Point", "Destination", "Route Id", "Driver"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        busespnl.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 660, 320));
        busespnl.add(Bsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 30, 190, -1));

        slcBRid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        busespnl.add(slcBRid, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 240, 40));

        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Route ID");
        busespnl.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        ManageTab.addTab("tab1", busespnl);

        routespnl.setBackground(new java.awt.Color(0, 102, 0));
        routespnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Routes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Californian FB", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        routespnl.setForeground(new java.awt.Color(0, 0, 0));
        routespnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Route ID", "Starting Point", "Destination", "Departure Time", "Arrival Time", "Fare"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        routespnl.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 550, 320));
        routespnl.add(Rid, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 170, -1));
        routespnl.add(Rst, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 170, -1));

        Rdes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdesActionPerformed(evt);
            }
        });
        routespnl.add(Rdes, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 170, -1));
        routespnl.add(Rdep, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 170, 30));

        Rfare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RfareActionPerformed(evt);
            }
        });
        routespnl.add(Rfare, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 170, -1));
        routespnl.add(Rsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, 200, -1));
        routespnl.add(Rarr, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 170, 30));

        Radd.setBackground(new java.awt.Color(0, 153, 51));
        Radd.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        Radd.setText("ADD");
        Radd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RaddActionPerformed(evt);
            }
        });
        routespnl.add(Radd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, 100, 40));

        Rdelete.setBackground(new java.awt.Color(0, 153, 51));
        Rdelete.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        Rdelete.setText("DELETE");
        Rdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdeleteActionPerformed(evt);
            }
        });
        routespnl.add(Rdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 410, 100, 40));

        Redit.setBackground(new java.awt.Color(0, 153, 51));
        Redit.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        Redit.setText("EDIT");
        Redit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReditActionPerformed(evt);
            }
        });
        routespnl.add(Redit, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, 100, 40));

        btnRsearch.setText("Search");
        btnRsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRsearchActionPerformed(evt);
            }
        });
        routespnl.add(btnRsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, 100, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Route ID");
        routespnl.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Starting Piont");
        routespnl.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Destination");
        routespnl.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Depature Time");
        routespnl.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Fare (P)");
        routespnl.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Arrival Time");
        routespnl.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, -1));

        ManageTab.addTab("tab2", routespnl);

        bookingpnl.setBackground(new java.awt.Color(0, 102, 51));
        bookingpnl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Bookings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Californian FB", 1, 18))); // NOI18N
        bookingpnl.setForeground(new java.awt.Color(255, 255, 255));
        bookingpnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ticket ID", "Passenger ID", "Passenger Name", "Bus ID", "Seat No.", "Starting Piont", "Destination", "Date", "Diascount", "Total Amount"
            }
        ));
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(9).setResizable(false);
        }

        bookingpnl.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 920, 300));
        bookingpnl.add(Tid, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 110, -1));
        bookingpnl.add(Tpid, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 110, -1));
        bookingpnl.add(Tpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 260, -1));

        Tseat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TseatActionPerformed(evt);
            }
        });
        bookingpnl.add(Tseat, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 100, -1));

        Tdate.setBackground(new java.awt.Color(255, 255, 255));
        Tdate.setBorder(null);
        Tdate.setForeground(new java.awt.Color(255, 255, 255));
        bookingpnl.add(Tdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 150, -1));
        bookingpnl.add(Tdct, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 110, -1));
        bookingpnl.add(Ttotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 190, 130, -1));
        bookingpnl.add(Tsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 30, 170, -1));

        Tsearchbtn.setText("SEARCH");
        Tsearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TsearchbtnActionPerformed(evt);
            }
        });
        bookingpnl.add(Tsearchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 80, -1));

        Taddbtn.setBackground(new java.awt.Color(0, 153, 51));
        Taddbtn.setText("ADD");
        Taddbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaddbtnActionPerformed(evt);
            }
        });
        bookingpnl.add(Taddbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 90, 110, 40));

        Teditbtn.setBackground(new java.awt.Color(0, 153, 51));
        Teditbtn.setText("EDIT");
        Teditbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeditbtnActionPerformed(evt);
            }
        });
        bookingpnl.add(Teditbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 140, 110, 40));

        Tdeletebtn.setBackground(new java.awt.Color(0, 153, 51));
        Tdeletebtn.setText("DELETE");
        Tdeletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TdeletebtnActionPerformed(evt);
            }
        });
        bookingpnl.add(Tdeletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, 110, 40));

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ticket ID");
        bookingpnl.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jLabel17.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Passenger ID");
        bookingpnl.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel18.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Passenger Name");
        bookingpnl.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jLabel19.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Bus ID");
        bookingpnl.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        jLabel20.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Seat No.");
        bookingpnl.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        jLabel22.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Date");
        bookingpnl.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        jLabel24.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Discount");
        bookingpnl.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, -1));

        jLabel25.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Total Amount");
        bookingpnl.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, -1, -1));

        Troutefrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookingpnl.add(Troutefrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 180, -1));

        Tbid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookingpnl.add(Tbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 110, -1));

        Trouteto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bookingpnl.add(Trouteto, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 200, -1));

        jLabel38.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Route");
        bookingpnl.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, -1, -1));

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bus/ticketing/pics/next.png"))); // NOI18N
        bookingpnl.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 116, -1, 30));

        ManageTab.addTab("tab3", bookingpnl);

        adminpnl.setBackground(new java.awt.Color(0, 102, 51));
        adminpnl.setBorder(null);
        adminpnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Admins", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Californian FB", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(Aid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 240, -1));
        jPanel2.add(Aname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 240, -1));

        Acontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcontactActionPerformed(evt);
            }
        });
        jPanel2.add(Acontact, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 240, -1));
        jPanel2.add(Apass, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 240, -1));

        Aaddbtn.setBackground(new java.awt.Color(0, 153, 51));
        Aaddbtn.setText("ADD");
        Aaddbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AaddbtnActionPerformed(evt);
            }
        });
        jPanel2.add(Aaddbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 80, 50));

        Aeditbtn.setBackground(new java.awt.Color(0, 153, 51));
        Aeditbtn.setText("EDIT");
        Aeditbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AeditbtnActionPerformed(evt);
            }
        });
        jPanel2.add(Aeditbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 460, 90, 50));

        Adeletebtn.setBackground(new java.awt.Color(0, 153, 51));
        Adeletebtn.setText("DELETE");
        Adeletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdeletebtnActionPerformed(evt);
            }
        });
        jPanel2.add(Adeletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, 80, 50));

        Atable.setBackground(new java.awt.Color(0, 153, 51));
        Atable.setText("CHECK");
        Atable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtableActionPerformed(evt);
            }
        });
        jPanel2.add(Atable, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 80, 50));

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Admin ID:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel21.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Admin Name:");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        jLabel26.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Contact:");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel27.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Role:");
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        jLabel28.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("Email:");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        jLabel29.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Password:");
        jPanel2.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));
        jPanel2.add(Asearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 160, -1));

        Asearchbtn.setText("SEARCH");
        Asearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsearchbtnActionPerformed(evt);
            }
        });
        jPanel2.add(Asearchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 100, -1));

        Arole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AroleActionPerformed(evt);
            }
        });
        jPanel2.add(Arole, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 240, -1));
        jPanel2.add(Aemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 240, -1));

        adminpnl.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 450, 540));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Drivers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Californian FB", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(Did, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 260, -1));
        jPanel3.add(Dname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 260, -1));
        jPanel3.add(Dcontact, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 260, -1));

        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Driver ID:");
        jPanel3.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Driver Name:");
        jPanel3.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("Contact:");
        jPanel3.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        Dadd.setBackground(new java.awt.Color(0, 153, 51));
        Dadd.setText("ADD");
        Dadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DaddActionPerformed(evt);
            }
        });
        jPanel3.add(Dadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 80, 50));

        Dedit.setBackground(new java.awt.Color(0, 153, 51));
        Dedit.setText("EDIT");
        Dedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeditActionPerformed(evt);
            }
        });
        jPanel3.add(Dedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 80, 50));

        Ddelete.setBackground(new java.awt.Color(0, 153, 51));
        Ddelete.setText("DELETE");
        Ddelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DdeleteActionPerformed(evt);
            }
        });
        jPanel3.add(Ddelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, 80, 50));

        Dtable.setBackground(new java.awt.Color(0, 153, 51));
        Dtable.setText("CHECK");
        Dtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DtableActionPerformed(evt);
            }
        });
        jPanel3.add(Dtable, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 80, 50));

        Dsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DsearchActionPerformed(evt);
            }
        });
        jPanel3.add(Dsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 150, -1));

        Dsearchbtn.setText("SEARCH");
        Dsearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DsearchbtnActionPerformed(evt);
            }
        });
        jPanel3.add(Dsearchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 100, -1));

        adminpnl.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 450, 540));

        ManageTab.addTab("tab4", adminpnl);

        getContentPane().add(ManageTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 940, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mngbusBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mngbusBtnMouseClicked
        // TODO add your handling code here:
          ManageTab.setSelectedIndex(0);
        mngbusBtn.setBackground(new Color(0,102,51));
        mngrouteBtn.setBackground(Color.white);
        mngrouteBtn.setForeground(Color.black);
         mngbookingsBtn.setBackground(Color.white);
            mngbookingsBtn.setForeground(Color.black);
      mngadminsBtn.setBackground(Color.white);
           mngadminsBtn.setForeground(Color.black);
    }//GEN-LAST:event_mngbusBtnMouseClicked

    private void mngrouteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mngrouteBtnMouseClicked
        // TODO add your handling code here:
        ManageTab.setSelectedIndex(1);
        mngbusBtn.setBackground(Color.white);
         mngbusBtn.setForeground(Color.black);
        mngrouteBtn.setBackground(new Color(0,102,51));
        mngbookingsBtn.setBackground(Color.white);
            mngbookingsBtn.setForeground(Color.black);
      mngadminsBtn.setBackground(Color.white);
           mngadminsBtn.setForeground(Color.black);
    }//GEN-LAST:event_mngrouteBtnMouseClicked

    private void mngbookingsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mngbookingsBtnMouseClicked
        // TODO add your handling code here:
       ManageTab.setSelectedIndex(2);
        mngbusBtn.setBackground(Color.white);
        mngbusBtn.setForeground(Color.black);
        mngrouteBtn.setBackground(Color.white);
            mngrouteBtn.setForeground(Color.black);
      
        mngbookingsBtn.setBackground(new Color(0,102,51));
        mngadminsBtn.setBackground(Color.white);
           mngadminsBtn.setForeground(Color.black);
    }//GEN-LAST:event_mngbookingsBtnMouseClicked

    private void mngadminsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mngadminsBtnMouseClicked
        // TODO add your handling code here:
       ManageTab.setSelectedIndex(3);
        mngbusBtn.setBackground(Color.white);
        mngbusBtn.setForeground(Color.black);
        mngrouteBtn.setBackground(Color.white);
            mngrouteBtn.setForeground(Color.black);
        mngbookingsBtn.setBackground(Color.white);
            mngbookingsBtn.setForeground(Color.black);
        mngadminsBtn.setBackground(new Color(0,102,51));
    }//GEN-LAST:event_mngadminsBtnMouseClicked

    private void mngbusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mngbusBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mngbusBtnActionPerformed

    private void mngrouteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mngrouteBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mngrouteBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LOgIn in=new LOgIn();
        in.setVisible(true);
        dispose();
          in.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBsearchActionPerformed
      String search=Bsearch.getText();
    
        try  {
             connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
               ps = connect.prepareStatement( "SELECT * FROM buses WHERE Bus_ID = ?");
            ps.setString(1, search);
           result = ps.executeQuery();
                if (result.next()==true) {
            Bid.setText(result.getString("Bus_ID"));
        Bno.setText(result.getString("Bus_No"));
        Btype.setText(result.getString("Bus_Type"));

        // Set combo boxes
        slcBroute.setSelectedItem(result.getString("Route_From"));
        slcBroute2.setSelectedItem(result.getString("Route_To"));
        slcBRid.setSelectedItem(result.getString("Route_ID"));
        slcBdriver.setSelectedItem(result.getString("Bus_Driver"));
                
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    

    }//GEN-LAST:event_btnBsearchActionPerformed

    private void btnBdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBdeleteActionPerformed
       String search=Bsearch.getText();
       
        try {
            ps=connect.prepareStatement("Delete from buses where Bus_ID=?");
            ps.setString(1, search);
            int ex=ps.executeUpdate();
            
            if (ex==1){
                JOptionPane.showConfirmDialog(this, "Are you sure you want to delete This Bus?");
                 Bid.setText("");
        Bno.setText("");
        Btype.setText("");
        Bsearch.setText("");
          ToTableBus();
    } else {
        JOptionPane.showMessageDialog(this, "Deleting Canceled!");
    }
                
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        
    }//GEN-LAST:event_btnBdeleteActionPerformed

    private void btnBaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaddActionPerformed
     
      try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");

   
    if (Bid.getText().isEmpty() || Bno.getText().isEmpty() || 
        Btype.getText().isEmpty() || slcBroute.getSelectedItem() == null || 
             slcBroute.getSelectedItem() == null || 
        slcBdriver.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Please fill all fields!");
        return;
    }

    String query = "INSERT INTO buses (`Bus_ID`, `Bus_No`, `Bus_Type`, `Route_From`, `Route_To`,Route_ID, `Bus_Driver`) VALUES (?, ?, ?, ?, ?,?,?)";
    ps = connect.prepareStatement(query);
    ps.setString(1, Bid.getText());
    ps.setString(2, Bno.getText());
    ps.setString(3, Btype.getText());
    ps.setString(4, (String) slcBroute.getSelectedItem());
     ps.setString(5, (String) slcBroute2.getSelectedItem());
       ps.setString(6, (String) slcBRid.getSelectedItem());
    ps.setString(7, (String) slcBdriver.getSelectedItem());
    
    int k = ps.executeUpdate();

    if(k == 1) {
        JOptionPane.showMessageDialog(this, "Added Successfully!");
        Bid.setText("");
        Bno.setText("");
        Btype.setText("");
       ToTableBus();
    } else {
        JOptionPane.showMessageDialog(this, "Adding Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, "SQL Error Code: " + ex.getErrorCode() + " - " + ex.getMessage(), ex);
}
    }//GEN-LAST:event_btnBaddActionPerformed

    private void btnBeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeditActionPerformed
          String searchID = Bsearch.getText(); 
try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");


    ps = connect.prepareStatement("UPDATE buses SET Bus_No=?, Bus_Type=?, Route_From=?, Route_To=?, Route_ID=?, Bus_Driver=? WHERE Bus_ID=?");

    ps.setString(1, Bno.getText());
    ps.setString(2, Btype.getText());
    ps.setString(3, (String) slcBroute.getSelectedItem());
    ps.setString(4, (String) slcBroute2.getSelectedItem());
     ps.setString(5, (String) slcBRid.getSelectedItem());
    ps.setString(6, (String) slcBdriver.getSelectedItem());
    ps.setString(7, searchID); 

    int k = ps.executeUpdate();

    
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Updated Successfully!");
        Bid.setText("");
        Bno.setText("");
        Btype.setText("");
       
        
      ToTableBus();
    } else {
        JOptionPane.showMessageDialog(this, "Update Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage()); // Optional: Show error message
}
    }//GEN-LAST:event_btnBeditActionPerformed

    private void RfareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RfareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RfareActionPerformed

    private void btnRsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRsearchActionPerformed
     String search=Rsearch.getText();
    
        try  {
             connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
               ps = connect.prepareStatement( "SELECT * FROM route_table WHERE Route_ID = ?");
            ps.setString(1, search);
           result = ps.executeQuery();
                if (result.next()==true) {
            Rid.setText(result.getString(1));
           Rst.setText(result.getString(2));
             Rdes.setText(result.getString(3));
            Rdep.setText(result.getString(4));
           Rarr.setText(result.getString(5));
             Rfare.setText(result.getString(6));
                    
                
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRsearchActionPerformed

    private void RdesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RdesActionPerformed

    private void RaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RaddActionPerformed
         
      try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");

   
    if (Rid.getText().isEmpty() || 
    Rst.getText().isEmpty() || 
    Rdes.getText().isEmpty() || 
    Rdep.getText().isEmpty() || 
    Rarr.getText().isEmpty() || 
    Rfare.getText().isEmpty()) { 
    JOptionPane.showMessageDialog(this, "Please fill all fields!");
    return;
}

    String query = "INSERT INTO `route_table`(`Route_ID`, `Starting_Point`, `Destination`, `Departure_Time`, `Arrival_Time`, `Fare`) VALUES (?,?,?,?,?,?)";
    ps = connect.prepareStatement(query);
    ps.setString(1, Rid.getText());
    ps.setString(2, Rst.getText());
    ps.setString(3, Rdes.getText());
    ps.setString(4, Rdep.getText());
    ps.setString(5, Rarr.getText());
    ps.setString(6,Rfare.getText());
    
    int k = ps.executeUpdate();

    if(k == 1) {
        JOptionPane.showMessageDialog(this, " Route Added Successfully!");
        Rid.setText("");
        Rst.setText("");
        Rdes.setText("");
         Rdep.setText("");
          Rarr.setText("");
           Rfare.setText("");
        ToTableRoutes();
    } else {
        JOptionPane.showMessageDialog(this, "Adding Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, "SQL Error Code: " + ex.getErrorCode() + " - " + ex.getMessage(), ex);
}
    }//GEN-LAST:event_RaddActionPerformed

    private void ReditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReditActionPerformed
        String searchRid = Rsearch.getText(); 
try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");


    ps = connect.prepareStatement("UPDATE route_table SET Route_ID=?, Starting_Point=?, Destination=?, Departure_Time=?, Arrival_Time=?, Fare=? WHERE Route_ID=?");

    ps.setString(1, Rid.getText());
    ps.setString(2, Rst.getText());
    ps.setString(3, Rdes.getText());
    ps.setString(4, Rdep.getText());
     ps.setString(5, Rarr.getText());
      ps.setString(6, Rfare.getText());
    ps.setString(7, searchRid); 

    int k = ps.executeUpdate();

    
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Updated Successfully!");
        Rid.setText("");
        Rst.setText("");
        Rdes.setText("");
        Rdep.setText("");
        Rarr.setText("");
        Rfare.setText("");
      ToTableRoutes();
    } else {
        JOptionPane.showMessageDialog(this, "Update Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage()); // Optional: Show error message
}
    }//GEN-LAST:event_ReditActionPerformed

    private void RdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdeleteActionPerformed
       String search=Rsearch.getText();
       
        try {
            ps=connect.prepareStatement("Delete from route_table where Route_ID=?");
            ps.setString(1, search);
            int ex=ps.executeUpdate();
            
            if (ex==1){
                JOptionPane.showConfirmDialog(this, "Are you sure you want to delete This Record?");
                 Rid.setText("");
        Rst.setText("");
        Rdes.setText("");
        Rdep.setText("");
        Rarr.setText("");
        Rfare.setText("");
        Rsearch.setText("");
      ToTableRoutes();
    } else {
        JOptionPane.showMessageDialog(this, "Deleting Canceled!");
    }
                
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }//GEN-LAST:event_RdeleteActionPerformed

    private void TeditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeditbtnActionPerformed
          String searchID = Tsearch.getText(); 
try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");


    ps = connect.prepareStatement("UPDATE`ticket_table` SET `Ticket_ID`=?,`Passengers_ID`=?,`Passenger_Name`=?,`Bus_ID`=?,`Seat_No`=?,`StartingPoint`=?,`Destination`=?,`Date`=?,`Discount`=?,`Total_amount`=? WHERE Passengers_ID=? ");

    ps.setInt(1, Integer.parseInt(Tid.getText())); 
   ps.setInt(2, Integer.parseInt(Tpid.getText())); 
     ps.setString(3, Tpname.getText());
      ps.setString(4,(String) Tbid.getSelectedItem());
       ps.setString(5, Tseat.getText());
    ps.setString(6,(String) Troutefrom.getSelectedItem());
    ps.setString(7,(String) Trouteto.getSelectedItem());
          SimpleDateFormat df= new SimpleDateFormat("yyyy-MM-dd");
        String date=df.format(Tdate.getDate());
         ps.setString(8, date);
          ps.setString(9, Tdct.getText());
           ps.setString(10, Ttotal.getText());
          ps.setString(11, searchID); 
 
    int k = ps.executeUpdate();

    
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Updated Successfully!");
       Tid.setText("");
        Tpid.setText("");
        Tpname.setText("");
        Tbid.setSelectedItem("");
         Tseat.setText("");   
         Troutefrom.setSelectedItem("");
          Trouteto.setSelectedItem("");
          Tdate.setDate(null);
         
             Tdct.setText("");
               Ttotal.setText("");
                ToTableTicket();
    } else {
        JOptionPane.showMessageDialog(this, "Update Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage()); // Optional: Show error message
}
                                            
    }//GEN-LAST:event_TeditbtnActionPerformed

    private void TseatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TseatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TseatActionPerformed

    private void TsearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TsearchbtnActionPerformed
       String search = Tsearch.getText();
     

try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");
    // Correct the SQL and parameter binding
    ps = connect.prepareStatement("SELECT * FROM `ticket_table` WHERE `Passengers_ID`=?");
    
    ps.setString(1, search); // Assuming `search` is Firstname
    
    
    result = ps.executeQuery();
    
    if (result.next()) {
      
        Tid.setText(String.valueOf(result.getInt("Ticket_ID")));
        Tpid.setText(String.valueOf(result.getInt("Passengers_ID")));
        Tpname.setText(result.getString("Passenger_Name"));
        Tbid.setSelectedItem(result.getString("Bus_ID"));
        Tseat.setText(result.getString("Seat_No"));
        Troutefrom.setSelectedItem(result.getString("StartingPoint"));
 Trouteto.setSelectedItem(result.getString("Destination"));
     
        java.util.Date ticketDate = result.getDate("Date");
        Tdate.setDate(ticketDate);  // Directly set to JDateChooser

        Tdct.setText(String.valueOf(result.getInt("Discount")));
        Ttotal.setText(String.valueOf(result.getInt("Total_amount")));
    } else {
        JOptionPane.showMessageDialog(this, "Passenger ID not found.");
    }

} catch (SQLException e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_TsearchbtnActionPerformed

    private void TaddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaddbtnActionPerformed
              
      try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");

   
    if (  
    Tpid.getText().isEmpty() || 
    Tpname.getText().isEmpty() || 
    Tbid.getSelectedItem()==null  || 
    Tseat.getText().isEmpty() || 
    Troutefrom.getSelectedItem()==null        
            ) { 
    JOptionPane.showMessageDialog(this, "Please fill all fields!");
    return;
}

    String query = "INSERT INTO `ticket_table`(`Passengers_ID`, `Passenger_Name`, `Bus_ID`, `Seat_No.`, `Route`, `Date`, `Discount`, `Total_amount`) VALUES (?,?,?,?,?,?,?,?)";
    ps = connect.prepareStatement(query);
  
    ps.setInt(1, Integer.parseInt(Tpid.getText())); 
    ps.setString(2, Tpname.getText());
   ps.setString(3,(String) Tbid.getSelectedItem());
    ps.setString(4, Tseat.getText());
    ps.setString(5,(String) Troutefrom.getSelectedItem());
    SimpleDateFormat df= new SimpleDateFormat("yyyy-MM-dd");
    String date=df.format(Tdate.getDate());
    ps.setString(6,date);
      ps.setInt(7, Integer.parseInt(Tdct.getText()));
    ps.setInt(8, Integer.parseInt(Ttotal.getText()));
    
    
    
    int k = ps.executeUpdate();

    if(k == 1) {
        JOptionPane.showMessageDialog(this, " Ticket Added Successfully!");
    
        Tpid.setText("");
        Tpname.setText("");
         Tseat.setText("");   
          Tdate.setDate(null);
          
             Tdct.setText("");
               Ttotal.setText("");
        ToTableTicket();
    } else {
        JOptionPane.showMessageDialog(this, "Adding Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, "SQL Error Code: " + ex.getErrorCode() + " - " + ex.getMessage(), ex);
}
                                       

    }//GEN-LAST:event_TaddbtnActionPerformed

    private void TdeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TdeletebtnActionPerformed
         String search=Tsearch.getText();
       
        try {
            ps=connect.prepareStatement("Delete from `ticket_table` where `Passengers_ID`=?");
            ps.setString(1, search);
            int ex=ps.executeUpdate();
            
            if (ex==1){
                JOptionPane.showConfirmDialog(this, "Are you sure you want to delete This Ticket?");
        Tid.setText("");
        Tpid.setText("");
        Tpname.setText("");
        Tbid.setSelectedItem("");
         Tseat.setText("");   
         Troutefrom.setSelectedItem("");
          Tdate.setDate(null);         
             Tdct.setText("");
               Ttotal.setText("");
        ToTableTicket();
    } else {
        JOptionPane.showMessageDialog(this, "Deleting Canceled!");
    }
                
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_TdeletebtnActionPerformed

    private void AcontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AcontactActionPerformed

    private void AeditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AeditbtnActionPerformed
      String searchID = Asearch.getText(); 
try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");


    ps = connect.prepareStatement("UPDATE `admin_table` SET `Admin_ID`=?,`Admin_Name`=?,`Contact`=?,`Role`=?,`Email`=?,`Pass_Assigned`=? WHERE `Admin_ID`=?");

    ps.setString(1, Aid.getText());
    ps.setString(2, Aname.getText());
       ps.setString(3, Acontact.getText());
         ps.setString(4, Arole.getText());
           ps.setString(5, Aemail.getText());
             ps.setString(6, Apass.getText());
    ps.setString(7, searchID); 

    int k = ps.executeUpdate();

    
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Updated Successfully!");
        Aid.setText("");
        Aname.setText("");
        Acontact.setText("");
         Arole.setText("");
        Aemail.setText("");
        Apass.setText("");
     TableAdmin t=new TableAdmin();
     t.ToTableAdmin();
    } else {
        JOptionPane.showMessageDialog(this, "Update Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage()); // Optional: Show error message
}
    }//GEN-LAST:event_AeditbtnActionPerformed

    private void AaddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AaddbtnActionPerformed
          
      try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");

   
    if ( 
    Aname.getText().isEmpty() || 
    Acontact.getText().isEmpty() || 
    Arole.getText().isEmpty() || 
    Aemail.getText().isEmpty() || 
    Apass.getText().isEmpty()) { 
    JOptionPane.showMessageDialog(this, "Please fill all fields!");
    return;
}

    String query = "INSERT INTO `admin_table`( `Admin_Name`, `Contact`, `Role`, `Email`, `Pass_Assigned`) VALUES (?,?,?,?,?)";
    ps = connect.prepareStatement(query);
    ps.setString(1, Aname.getText());
    ps.setString(2, Acontact.getText());
    ps.setString(3, Arole.getText());
    ps.setString(4, Aemail.getText());
    ps.setString(5, Apass.getText());
 
    
    int k = ps.executeUpdate();

    if(k == 1) {
        JOptionPane.showMessageDialog(this, " Admin Added Successfully!");
        Aname.setText("");
        Acontact.setText("");
        Arole.setText("");
         Aemail.setText("");
          Apass.setText("");
          TableAdmin t= new TableAdmin();
          t.ToTableAdmin();
         
       
    } else {
        JOptionPane.showMessageDialog(this, "Adding Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, "SQL Error Code: " + ex.getErrorCode() + " - " + ex.getMessage(), ex);
}
    }//GEN-LAST:event_AaddbtnActionPerformed

    private void AtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtableActionPerformed
                TableAdmin t= new TableAdmin();
               
                t.setVisible(true);
                t.show();
                t.setLocationRelativeTo(null);
                t.ToTableAdmin();
  
    }//GEN-LAST:event_AtableActionPerformed

    private void DaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DaddActionPerformed
         try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");

   
    if ( 
  Did.getText().isEmpty() || 

    Dname.getText().isEmpty() || 
    Dcontact.getText().isEmpty())
  { 
    JOptionPane.showMessageDialog(this, "Please fill all fields!");
    return;
}

    String query = "INSERT INTO `driver_table`( `Driver_ID`,`driver_Name`, `Contact`) VALUES (?,?,?)";
    ps = connect.prepareStatement(query);
    ps.setString(1, Did.getText());
     ps.setString(3, Dname.getText());
    ps.setString(2, Dcontact.getText());
  
 
    
    int k = ps.executeUpdate();

    if(k == 1) {
        JOptionPane.showMessageDialog(this, " Driver Added Successfully!");
        Dname.setText("");
        Dcontact.setText("");
        Did.setText("");
       
          TableDriver t= new TableDriver();
          t.ToTableDriver();
         
       
    } else {
        JOptionPane.showMessageDialog(this, "Adding Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, "SQL Error Code: " + ex.getErrorCode() + " - " + ex.getMessage(), ex);
}
    }//GEN-LAST:event_DaddActionPerformed

    private void AdeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdeletebtnActionPerformed
          String search=Asearch.getText();
       
        try {
            ps=connect.prepareStatement("DELETE FROM `admin_table` WHERE Admin_ID=?");
            ps.setString(1, search);
            int ex=ps.executeUpdate();
            
            if (ex==1){
                JOptionPane.showConfirmDialog(this, "Are you sure you want to delete This Admin?");
        Aid.setText("");
        Aname.setText("");
        Acontact.setText("");
      
         Arole.setText("");   

             Aemail.setText("");
               Apass.setText("");
               TableAdmin t= new TableAdmin(); 
        t.ToTableAdmin();
    } else {
        JOptionPane.showMessageDialog(this, "Deleting Canceled!");
    }
                
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AdeletebtnActionPerformed

    private void DdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DdeleteActionPerformed
       String search=Dsearch.getText();
       
        try {
            ps=connect.prepareStatement("DELETE FROM `driver_table` WHERE `Driver_ID`=?");
            ps.setString(1, search);
            int ex=ps.executeUpdate();
            
            if (ex==1){
                JOptionPane.showConfirmDialog(this, "Are you sure you want to delete This Driver?");
        Did.setText("");
        Dname.setText("");
        Dcontact.setText("");
      
               TableDriver t= new TableDriver(); 
        t.ToTableDriver();
    } else {
        JOptionPane.showMessageDialog(this, "Deleting Canceled!");
    }
                
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DdeleteActionPerformed

    private void DeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeditActionPerformed
        String searchID = Dsearch.getText(); 
try {
    connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing", "root", "");


    ps = connect.prepareStatement("UPDATE `driver_table` SET `Driver_ID`='[value-1]',`Driver_Name`='[value-2]',`Contact`='[value-3]' WHERE `Driver_ID`=?");

    ps.setString(1, Did.getText());
    ps.setString(2, Dname.getText());
       ps.setString(3, Dcontact.getText());
       
    ps.setString(4, searchID); 

    int k = ps.executeUpdate();

    
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Updated Successfully!");
        Did.setText("");
        Dname.setText("");
        Dcontact.setText("");
       
     TableDriver t=new TableDriver();
     t.ToTableDriver();
    } else {
        JOptionPane.showMessageDialog(this, "Update Failed!");
    }

} catch (SQLException ex) {
    Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage()); // Optional: Show error message
}
    }//GEN-LAST:event_DeditActionPerformed

    private void DtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DtableActionPerformed
        TableDriver  t= new TableDriver();
        t.setVisible(true);
                t.show();
                t.setLocationRelativeTo(null);
                t.ToTableDriver();
  
    }//GEN-LAST:event_DtableActionPerformed

    private void AsearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsearchbtnActionPerformed
         String search=Asearch.getText();
    
        try  {
             connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
               ps = connect.prepareStatement( "SELECT * FROM admin_table WHERE Admin_ID= ?");
            ps.setString(1, search);
           result = ps.executeQuery();
                if (result.next()==true) {
            Aid.setText(result.getString(1));
           Aname.setText(result.getString(2));
             Acontact.setText(result.getString(3));
               Arole.setText(result.getString(4));
                 Aemail.setText(result.getString(5));
                   Apass.setText(result.getString(6));
           
                    
                
            }else{
                    JOptionPane.showMessageDialog(this, "Admin ID not Found");
                }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_AsearchbtnActionPerformed

    private void DsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DsearchActionPerformed

    private void slcBroute2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slcBroute2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_slcBroute2ActionPerformed

    private void slcBdriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slcBdriverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_slcBdriverActionPerformed

    private void AroleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AroleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AroleActionPerformed

    private void DsearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DsearchbtnActionPerformed
      String search=Dsearch.getText();
    
        try  {
             connect = DriverManager.getConnection("jdbc:mysql://localhost/busticketing","root","");
               ps = connect.prepareStatement( "SELECT * FROM driver_table WHERE Driver_ID= ?");
            ps.setString(1, search);
           result = ps.executeQuery();
                if (result.next()==true) {
            Did.setText(result.getString(1));
           Dname.setText(result.getString(2));
             Dcontact.setText(result.getString(3));
              
           
                    
                
            }else{
                    JOptionPane.showMessageDialog(this, "Driver ID not Found!");
                }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_DsearchbtnActionPerformed

    public void ToTableBus(){
    int Ccount;
    try {
        ps = connect.prepareStatement("SELECT * FROM buses");
        result = ps.executeQuery();
        
        rsm = result.getMetaData();
        Ccount = rsm.getColumnCount();
        tmodel = (DefaultTableModel) jTable1.getModel();
        tmodel.setRowCount(0); // Clear previous rows if needed
        
        while(result.next()){
            Vector<Object> vec = new Vector<>();
            for (int i = 1; i <= Ccount; i++) {
                vec.add(result.getString(i)); // Use index
            }
            tmodel.addRow(vec);
        }
        
        // Optionally refresh the table view
        jTable1.revalidate(); 
        jTable1.repaint();
        
    } catch (SQLException ex) {
        Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }
     public void ToTableRoutes(){
    int Ccount;
    try {
        ps = connect.prepareStatement("SELECT * FROM route_table");
        result = ps.executeQuery();
        
        rsm = result.getMetaData();
        Ccount = rsm.getColumnCount();
        tmodel = (DefaultTableModel) jTable2.getModel();
        tmodel.setRowCount(0); 
        
        while(result.next()){
            Vector<Object> vec = new Vector<>();
            for (int i = 1; i <= Ccount; i++) {
                vec.add(result.getString(i)); // Use index
            }
            tmodel.addRow(vec);
        }
        
       
        jTable2.revalidate(); 
        jTable2.repaint();
        
    } catch (SQLException ex) {
        Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }
      public void ToTableTicket(){
    int Ccount;
    try {
        ps = connect.prepareStatement("SELECT * FROM ticket_table");
        result = ps.executeQuery();
        
        rsm = result.getMetaData();
        Ccount = rsm.getColumnCount();
        tmodel = (DefaultTableModel) jTable3.getModel();
        tmodel.setRowCount(0); // Clear previous rows if needed
        
        while(result.next()){
            Vector<Object> vec = new Vector<>();
            for (int i = 1; i <= Ccount; i++) {
                vec.add(result.getString(i)); // Use index
            }
            tmodel.addRow(vec);
        }
        
        // Optionally refresh the table view
        jTable3.revalidate(); 
        jTable3.repaint();
        
    } catch (SQLException ex) {
        Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }
     
     public void Routefrom(){
        try {
            ps=connect.prepareStatement("Select `Starting_Point` from route_table");
          
            result=ps.executeQuery();
             slcBroute.removeAllItems();
                Troutefrom.removeAllItems();
          while(result.next()){
                slcBroute.addItem(result.getString(1)); 
                 Troutefrom.addItem(result.getString(1)); 
            }
           ps=connect.prepareStatement("Select `Destination` from route_table");
            result=ps.executeQuery();
            slcBroute2.removeAllItems();
             Trouteto.removeAllItems();
           
            while(result.next()){
                slcBroute2.addItem(result.getString(1)); 
                 Trouteto.addItem(result.getString(1)); 
            }
              ps=connect.prepareStatement("Select `Route_ID` from route_table");
            result=ps.executeQuery();
            slcBRid.removeAllItems();
           
            while(result.next()){
                slcBRid.addItem(result.getString(1)); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     
         public void Routefromto(){
        try {
            ps=connect.prepareStatement("Select concat(`Starting_Point`,'-',`Destination`) from route_table");
          
            result=ps.executeQuery();
           
         
            while(result.next()){
              
          
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
      public void LoadBusno(){
        try {
            ps=connect.prepareStatement("Select `Bus_No` from `buses` ");
            result=ps.executeQuery();
            Tbid.removeAllItems();
            while(result.next()){
                Tbid.addItem(result.getString(1)); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
      
     public void LoadDriver(){
        try {
            ps=connect.prepareStatement("Select `Driver_Name` from driver_table");
            result=ps.executeQuery();
            slcBdriver.removeAllItems();
            while(result.next()){
                slcBdriver.addItem(result.getString(1)); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aaddbtn;
    private javax.swing.JTextField Acontact;
    private javax.swing.JButton Adeletebtn;
    private javax.swing.JButton Aeditbtn;
    private javax.swing.JTextField Aemail;
    private javax.swing.JTextField Aid;
    private javax.swing.JTextField Aname;
    private javax.swing.JTextField Apass;
    private javax.swing.JTextField Arole;
    private javax.swing.JTextField Asearch;
    private javax.swing.JButton Asearchbtn;
    private javax.swing.JButton Atable;
    private javax.swing.JTextField Bid;
    private javax.swing.JTextField Bno;
    private javax.swing.JTextField Bsearch;
    private javax.swing.JTextField Btype;
    private javax.swing.JButton Dadd;
    private javax.swing.JTextField Dcontact;
    private javax.swing.JButton Ddelete;
    private javax.swing.JButton Dedit;
    private javax.swing.JTextField Did;
    private javax.swing.JTextField Dname;
    private javax.swing.JTextField Dsearch;
    private javax.swing.JButton Dsearchbtn;
    private javax.swing.JButton Dtable;
    private javax.swing.JTabbedPane ManageTab;
    private javax.swing.JButton Radd;
    private javax.swing.JTextField Rarr;
    private javax.swing.JButton Rdelete;
    private javax.swing.JTextField Rdep;
    private javax.swing.JTextField Rdes;
    private javax.swing.JButton Redit;
    private javax.swing.JTextField Rfare;
    private javax.swing.JTextField Rid;
    private javax.swing.JTextField Rsearch;
    private javax.swing.JTextField Rst;
    private javax.swing.JButton Taddbtn;
    private javax.swing.JComboBox<String> Tbid;
    private com.toedter.calendar.JDateChooser Tdate;
    private javax.swing.JTextField Tdct;
    private javax.swing.JButton Tdeletebtn;
    private javax.swing.JButton Teditbtn;
    private javax.swing.JTextField Tid;
    private javax.swing.JTextField Tpid;
    private javax.swing.JTextField Tpname;
    private javax.swing.JComboBox<String> Troutefrom;
    private javax.swing.JComboBox<String> Trouteto;
    private javax.swing.JTextField Tsearch;
    private javax.swing.JButton Tsearchbtn;
    private javax.swing.JTextField Tseat;
    private javax.swing.JTextField Ttotal;
    private javax.swing.JPanel adminpnl;
    private javax.swing.JPanel bookingpnl;
    private javax.swing.JButton btnBadd;
    private javax.swing.JButton btnBdelete;
    private javax.swing.JButton btnBedit;
    private javax.swing.JButton btnBsearch;
    private javax.swing.JButton btnRsearch;
    private javax.swing.JPanel busespnl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JButton mngadminsBtn;
    private javax.swing.JButton mngbookingsBtn;
    private javax.swing.JButton mngbusBtn;
    private javax.swing.JButton mngrouteBtn;
    private javax.swing.JPanel routespnl;
    private javax.swing.JComboBox<String> slcBRid;
    private javax.swing.JComboBox<String> slcBdriver;
    private javax.swing.JComboBox<String> slcBroute;
    private javax.swing.JComboBox<String> slcBroute2;
    // End of variables declaration//GEN-END:variables

   
}
